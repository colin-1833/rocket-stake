{
  "address": "0xA6F15d9b81C3A2b1b06B0323b8B3b6996bd59883",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_reth_token_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rocket_deposit_pool_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "flashBorrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x819aaf5cb2ecdefb9fbacd507879279a7290da586423b42a18e5e42761285d44",
  "receipt": {
    "to": null,
    "from": "0x173a867F4D8C5492b2Ad8d756870e2186232f73c",
    "contractAddress": "0xA6F15d9b81C3A2b1b06B0323b8B3b6996bd59883",
    "transactionIndex": 0,
    "gasUsed": "842174",
    "logsBloom": "0x
    "blockHash": "0x96dca1c0098d3ed97b7918203fc8691ea7750fc1e84dbbc4b402a855c0feb891",
    "transactionHash": "0x819aaf5cb2ecdefb9fbacd507879279a7290da586423b42a18e5e42761285d44",
    "logs": [],
    "blockNumber": 5,
    "cumulativeGasUsed": "842174",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x62eE66a52629392A3B1A33A93f43ACE53A3252b9",
    "0x2c93753B75692A06E9cA8CF87074798A4b14B2fE",
    "0xCF0fB47aCb0b14357749495eA9c8002080F7fC63"
  ],
  "solcInputHash": "c9bea091848d2d6f483cb4588685ab5b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reth_token_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rocket_deposit_pool_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stubs/FlashLoanBorrower.sol\":\"FlashLoanBorrower\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0x5bbe210d3ee7f8913d5ab8cc3543f6b073e085f7e234632861d5e5ae99cf0712\",\"license\":\"AGPL-1.0\"},\"contracts/interfaces/IFlashBorrower.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\ninterface IFlashBorrower {\\n\\n    /**\\n     * @dev Receive a flash loan.\\n     * @param initiator The initiator of the loan.\\n     * @param token The loan currency.\\n     * @param amount The amount of tokens lent.\\n     * @param fee The additional amount of tokens to repay.\\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\\n     * @return The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\\n     */\\n    function onFlashLoan(\\n        address initiator,\\n        address token,\\n        uint256 amount,\\n        uint256 fee,\\n        bytes calldata data\\n    ) external returns (bytes32);\\n}\",\"keccak256\":\"0x2508dbb9623f0e9958121bd31670086c0d381a3de856d26443fd60839a41dbb5\",\"license\":\"AGPL-1.0\"},\"contracts/interfaces/IFlashLender.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\nimport './IFlashBorrower.sol';\\n\\ninterface IFlashLender {\\n\\n    /**\\n     * @dev The amount of currency available to be lent.\\n     * @param token The loan currency.\\n     * @return The amount of `token` that can be borrowed.\\n     */\\n    function maxFlashLoan(\\n        address token\\n    ) external view returns (uint256);\\n\\n    /**\\n     * @dev The fee to be charged for a given loan.\\n     * @param token The loan currency.\\n     * @param amount The amount of tokens lent.\\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\\n     */\\n    function flashFee(\\n        address token,\\n        uint256 amount\\n    ) external view returns (uint256);\\n\\n    /**\\n     * @dev Initiate a flash loan.\\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\\n     * @param token The loan currency.\\n     * @param amount The amount of tokens lent.\\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\\n     */\\n    function flashLoan(\\n        IFlashBorrower receiver,\\n        address token,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external returns (bool);\\n}\",\"keccak256\":\"0xe646e328d9163cfbe2c1e0f78e5b4906a7fbbe3e510b112bdc8a7ea6f1f317e3\",\"license\":\"AGPL-1.0\"},\"contracts/interfaces/IRocketDepositPool.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\ninterface IRocketDepositPool {\\n    function deposit() external payable;\\n}\",\"keccak256\":\"0xb5bd33ff314d42c78c158ba13089d59e460f059acfa340f670caf01cef9b59ca\",\"license\":\"AGPL-1.0\"},\"contracts/interfaces/IRocketTokenRETH.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\nimport '../interfaces/IERC20.sol';\\n\\ninterface IRocketTokenRETH is IERC20 {\\n    function getEthValue(uint256 _rethAmount) external view returns (uint256);\\n    function getRethValue(uint256 _ethAmount) external view returns (uint256);\\n    function distributeRewards() payable external;\\n    function getTotalCollateral() external view returns (uint256);\\n    function burn(uint256 _rethAmount) external returns (uint256);\\n}\",\"keccak256\":\"0x4104ac5b3685a5f02b9dbe3c036cf985ac5c19f23c67bcb3150f11199a63410d\",\"license\":\"AGPL-1.0\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\nlibrary SafeMath {\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\",\"keccak256\":\"0x49990db7278b36c87d44c53dc2a9f306d5304a35a4e3add09305dbc844af920b\",\"license\":\"AGPL-1.0\"},\"contracts/stubs/FlashLoanBorrower.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\nimport '../libraries/SafeMath.sol';\\nimport '../interfaces/IFlashBorrower.sol';\\nimport '../interfaces/IFlashLender.sol';\\nimport '../interfaces/IRocketTokenRETH.sol';\\nimport '../interfaces/IRocketDepositPool.sol';\\nimport '../interfaces/IERC20.sol';\\n\\ncontract FlashLoanBorrower is IFlashBorrower {\\n    using SafeMath for uint256;\\n\\n    enum Action {NORMAL, OTHER}\\n\\n    address owner;\\n    uint256 loans_made;\\n    IRocketDepositPool rocket_deposit_pool;\\n    IRocketTokenRETH reth_token;\\n    IFlashLender lender;\\n\\n    constructor(address _lender, address _reth_token_address, address _rocket_deposit_pool_address) {\\n        owner = msg.sender;\\n        lender = IFlashLender(_lender);\\n        reth_token = IRocketTokenRETH(_reth_token_address);\\n        rocket_deposit_pool = IRocketDepositPool(_rocket_deposit_pool_address);\\n    }\\n\\n    // this function gets called by the lender\\n    function onFlashLoan(\\n        address initiator,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes calldata data\\n    ) external override returns(bytes32) {\\n        require(\\n            msg.sender == address(lender),\\n            \\\"FlashBorrower: Untrusted lender\\\"\\n        );\\n        require(\\n            initiator == address(this),\\n            \\\"FlashBorrower: Untrusted loan initiator\\\"\\n        );\\n        (Action action) = abi.decode(data, (Action));\\n        if (action == Action.NORMAL) {\\n            // normally the borrower would need some strategy to 'aquire' more tokens so they can cover the loan fee,\\n            // however, since we have no fee, there is no such need\\n            loans_made = loans_made.add(1);\\n        } \\n        return keccak256(\\\"ERC3156FlashBorrower.onFlashLoan\\\");\\n    }\\n\\n    function flashBorrow(\\n        uint256 amount\\n    ) public {\\n        bytes memory data = abi.encode(Action.NORMAL);\\n        uint256 _allowance = reth_token.allowance(address(this), address(lender));\\n        uint256 _fee = lender.flashFee(address(reth_token), amount);\\n        uint256 _repayment = amount + _fee;\\n        reth_token.approve(address(lender), _allowance + _repayment);\\n        lender.flashLoan(this, address(reth_token), amount, data);\\n    }\\n}\",\"keccak256\":\"0xc25b88157bcffb71b62a38d16218719357850c152079f7c7d6d4b5dd1c404c52\",\"license\":\"AGPL-1.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610e86380380610e8683398181016040528101906100329190610152565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101ea565b60008151905061014c816101d3565b92915050565b60008060006060848603121561016757600080fd5b60006101758682870161013d565b93505060206101868682870161013d565b92505060406101978682870161013d565b9150509250925092565b60006101ac826101b3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101dc816101a1565b81146101e757600080fd5b50565b610c8d806101f96000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806323e30c8b1461003b578063ee68fa9a1461006b575b600080fd5b610055600480360381019061005091906106ba565b610087565b604051610062919061096c565b60405180910390f35b6100856004803603810190610080919061079e565b61025d565b005b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011090610a0e565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017e906109ee565b60405180910390fd5b600083838101906101989190610775565b9050600060018111156101d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600181111561020d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561022f57610228600180546105f190919063ffffffff16565b6001819055505b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99150509695505050505050565b60008060405160200161027091906109d3565b60405160208183030381529060405290506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b815260040161030292919061091a565b60206040518083038186803b15801561031a57600080fd5b505afa15801561032e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035291906107c7565b90506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9d98ce4600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b81526004016103d5929190610943565b60206040518083038186803b1580156103ed57600080fd5b505afa158015610401573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042591906107c7565b9050600081856104359190610a5b565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683866104a49190610a5b565b6040518363ffffffff1660e01b81526004016104c1929190610943565b602060405180830381600087803b1580156104db57600080fd5b505af11580156104ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610513919061074c565b50600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635cffe9de30600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688886040518563ffffffff1660e01b81526004016105979493929190610987565b602060405180830381600087803b1580156105b157600080fd5b505af11580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e9919061074c565b505050505050565b600081836105ff9190610a5b565b905092915050565b60008135905061061681610c02565b92915050565b60008151905061062b81610c19565b92915050565b60008083601f84011261064357600080fd5b8235905067ffffffffffffffff81111561065c57600080fd5b60208301915083600182028301111561067457600080fd5b9250929050565b60008135905061068a81610c30565b92915050565b60008135905061069f81610c40565b92915050565b6000815190506106b481610c40565b92915050565b60008060008060008060a087890312156106d357600080fd5b60006106e189828a01610607565b96505060206106f289828a01610607565b955050604061070389828a01610690565b945050606061071489828a01610690565b935050608087013567ffffffffffffffff81111561073157600080fd5b61073d89828a01610631565b92509250509295509295509295565b60006020828403121561075e57600080fd5b600061076c8482850161061c565b91505092915050565b60006020828403121561078757600080fd5b60006107958482850161067b565b91505092915050565b6000602082840312156107b057600080fd5b60006107be84828501610690565b91505092915050565b6000602082840312156107d957600080fd5b60006107e7848285016106a5565b91505092915050565b6107f981610ab1565b82525050565b61080881610acf565b82525050565b600061081982610a2e565b6108238185610a39565b9350610833818560208601610b4c565b61083c81610bdd565b840191505092915050565b61085081610b16565b82525050565b61085f81610b3a565b82525050565b6000610872602783610a4a565b91507f466c617368426f72726f7765723a20556e74727573746564206c6f616e20696e60008301527f69746961746f72000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006108d8601f83610a4a565b91507f466c617368426f72726f7765723a20556e74727573746564206c656e646572006000830152602082019050919050565b61091481610b0c565b82525050565b600060408201905061092f60008301856107f0565b61093c60208301846107f0565b9392505050565b600060408201905061095860008301856107f0565b610965602083018461090b565b9392505050565b600060208201905061098160008301846107ff565b92915050565b600060808201905061099c6000830187610847565b6109a960208301866107f0565b6109b6604083018561090b565b81810360608301526109c8818461080e565b905095945050505050565b60006020820190506109e86000830184610856565b92915050565b60006020820190508181036000830152610a0781610865565b9050919050565b60006020820190508181036000830152610a27816108cb565b9050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610a6682610b0c565b9150610a7183610b0c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610aa657610aa5610b7f565b5b828201905092915050565b6000610abc82610aec565b9050919050565b60008115159050919050565b6000819050919050565b6000819050610ae782610bee565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b2182610b28565b9050919050565b6000610b3382610aec565b9050919050565b6000610b4582610ad9565b9050919050565b60005b83811015610b6a578082015181840152602081019050610b4f565b83811115610b79576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000601f19601f8301169050919050565b60028110610bff57610bfe610bae565b5b50565b610c0b81610ab1565b8114610c1657600080fd5b50565b610c2281610ac3565b8114610c2d57600080fd5b50565b60028110610c3d57600080fd5b50565b610c4981610b0c565b8114610c5457600080fd5b5056fea2646970667358221220b82ac9c1ed70a6e11157aefee2407b4f6a0f80b1dd5e3b7f013af36d04d28b3b64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806323e30c8b1461003b578063ee68fa9a1461006b575b600080fd5b610055600480360381019061005091906106ba565b610087565b604051610062919061096c565b60405180910390f35b6100856004803603810190610080919061079e565b61025d565b005b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011090610a0e565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610187576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017e906109ee565b60405180910390fd5b600083838101906101989190610775565b9050600060018111156101d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600181111561020d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561022f57610228600180546105f190919063ffffffff16565b6001819055505b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99150509695505050505050565b60008060405160200161027091906109d3565b60405160208183030381529060405290506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b815260040161030292919061091a565b60206040518083038186803b15801561031a57600080fd5b505afa15801561032e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035291906107c7565b90506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9d98ce4600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b81526004016103d5929190610943565b60206040518083038186803b1580156103ed57600080fd5b505afa158015610401573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042591906107c7565b9050600081856104359190610a5b565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683866104a49190610a5b565b6040518363ffffffff1660e01b81526004016104c1929190610943565b602060405180830381600087803b1580156104db57600080fd5b505af11580156104ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610513919061074c565b50600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635cffe9de30600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688886040518563ffffffff1660e01b81526004016105979493929190610987565b602060405180830381600087803b1580156105b157600080fd5b505af11580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e9919061074c565b505050505050565b600081836105ff9190610a5b565b905092915050565b60008135905061061681610c02565b92915050565b60008151905061062b81610c19565b92915050565b60008083601f84011261064357600080fd5b8235905067ffffffffffffffff81111561065c57600080fd5b60208301915083600182028301111561067457600080fd5b9250929050565b60008135905061068a81610c30565b92915050565b60008135905061069f81610c40565b92915050565b6000815190506106b481610c40565b92915050565b60008060008060008060a087890312156106d357600080fd5b60006106e189828a01610607565b96505060206106f289828a01610607565b955050604061070389828a01610690565b945050606061071489828a01610690565b935050608087013567ffffffffffffffff81111561073157600080fd5b61073d89828a01610631565b92509250509295509295509295565b60006020828403121561075e57600080fd5b600061076c8482850161061c565b91505092915050565b60006020828403121561078757600080fd5b60006107958482850161067b565b91505092915050565b6000602082840312156107b057600080fd5b60006107be84828501610690565b91505092915050565b6000602082840312156107d957600080fd5b60006107e7848285016106a5565b91505092915050565b6107f981610ab1565b82525050565b61080881610acf565b82525050565b600061081982610a2e565b6108238185610a39565b9350610833818560208601610b4c565b61083c81610bdd565b840191505092915050565b61085081610b16565b82525050565b61085f81610b3a565b82525050565b6000610872602783610a4a565b91507f466c617368426f72726f7765723a20556e74727573746564206c6f616e20696e60008301527f69746961746f72000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006108d8601f83610a4a565b91507f466c617368426f72726f7765723a20556e74727573746564206c656e646572006000830152602082019050919050565b61091481610b0c565b82525050565b600060408201905061092f60008301856107f0565b61093c60208301846107f0565b9392505050565b600060408201905061095860008301856107f0565b610965602083018461090b565b9392505050565b600060208201905061098160008301846107ff565b92915050565b600060808201905061099c6000830187610847565b6109a960208301866107f0565b6109b6604083018561090b565b81810360608301526109c8818461080e565b905095945050505050565b60006020820190506109e86000830184610856565b92915050565b60006020820190508181036000830152610a0781610865565b9050919050565b60006020820190508181036000830152610a27816108cb565b9050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610a6682610b0c565b9150610a7183610b0c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610aa657610aa5610b7f565b5b828201905092915050565b6000610abc82610aec565b9050919050565b60008115159050919050565b6000819050919050565b6000819050610ae782610bee565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b2182610b28565b9050919050565b6000610b3382610aec565b9050919050565b6000610b4582610ad9565b9050919050565b60005b83811015610b6a578082015181840152602081019050610b4f565b83811115610b79576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000601f19601f8301169050919050565b60028110610bff57610bfe610bae565b5b50565b610c0b81610ab1565b8114610c1657600080fd5b50565b610c2281610ac3565b8114610c2d57600080fd5b50565b60028110610c3d57600080fd5b50565b610c4981610b0c565b8114610c5457600080fd5b5056fea2646970667358221220b82ac9c1ed70a6e11157aefee2407b4f6a0f80b1dd5e3b7f013af36d04d28b3b64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 481,
        "contract": "contracts/stubs/FlashLoanBorrower.sol:FlashLoanBorrower",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 483,
        "contract": "contracts/stubs/FlashLoanBorrower.sol:FlashLoanBorrower",
        "label": "loans_made",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 486,
        "contract": "contracts/stubs/FlashLoanBorrower.sol:FlashLoanBorrower",
        "label": "rocket_deposit_pool",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IRocketDepositPool)130"
      },
      {
        "astId": 489,
        "contract": "contracts/stubs/FlashLoanBorrower.sol:FlashLoanBorrower",
        "label": "reth_token",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IRocketTokenRETH)165"
      },
      {
        "astId": 492,
        "contract": "contracts/stubs/FlashLoanBorrower.sol:FlashLoanBorrower",
        "label": "lender",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IFlashLender)124"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IFlashLender)124": {
        "encoding": "inplace",
        "label": "contract IFlashLender",
        "numberOfBytes": "20"
      },
      "t_contract(IRocketDepositPool)130": {
        "encoding": "inplace",
        "label": "contract IRocketDepositPool",
        "numberOfBytes": "20"
      },
      "t_contract(IRocketTokenRETH)165": {
        "encoding": "inplace",
        "label": "contract IRocketTokenRETH",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}