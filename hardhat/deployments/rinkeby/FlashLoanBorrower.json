{
  "address": "0x3e413384C20a40ACb911DBA8e73Ff7267D57b723",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_reth_token_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rocket_deposit_pool_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "flashBorrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onFlashLoan",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xafcf6eaa8c6587f13b108a9c0f3e04d039ddc2e1ebe81d73155753c19668c725",
  "receipt": {
    "to": null,
    "from": "0xb89282E1Ae6e496a4817298e8bf2E5CbF5a4b770",
    "contractAddress": "0x3e413384C20a40ACb911DBA8e73Ff7267D57b723",
    "transactionIndex": 10,
    "gasUsed": "910375",
    "logsBloom": "0x
    "blockHash": "0x04f0fdfec1b765321e9d4e3343d2276f6759672123e83b91d42edb720a480192",
    "transactionHash": "0xafcf6eaa8c6587f13b108a9c0f3e04d039ddc2e1ebe81d73155753c19668c725",
    "logs": [],
    "blockNumber": 9028764,
    "cumulativeGasUsed": "1875648",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xdd5a5273cD06b0594BD3dFA769f1fddecbCa4277",
    "0x3768920644220FAE13907E06583adAe485f670Ed",
    "0xe6B3F22370E38cfc094c8473087B7d520da08501"
  ],
  "solcInputHash": "a0eeb0cc880d1a331df35853c161539a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reth_token_address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rocket_deposit_pool_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stubs/FlashLoanBorrower.sol\":\"FlashLoanBorrower\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0x5bbe210d3ee7f8913d5ab8cc3543f6b073e085f7e234632861d5e5ae99cf0712\",\"license\":\"AGPL-1.0\"},\"contracts/interfaces/IFlashBorrower.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\ninterface IFlashBorrower {\\n\\n    /**\\n     * @dev Receive a flash loan.\\n     * @param initiator The initiator of the loan.\\n     * @param token The loan currency.\\n     * @param amount The amount of tokens lent.\\n     * @param fee The additional amount of tokens to repay.\\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\\n     * @return The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\\n     */\\n    function onFlashLoan(\\n        address initiator,\\n        address token,\\n        uint256 amount,\\n        uint256 fee,\\n        bytes calldata data\\n    ) external returns (bytes32);\\n}\",\"keccak256\":\"0x2508dbb9623f0e9958121bd31670086c0d381a3de856d26443fd60839a41dbb5\",\"license\":\"AGPL-1.0\"},\"contracts/interfaces/IFlashLender.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\nimport './IFlashBorrower.sol';\\n\\ninterface IFlashLender {\\n\\n    /**\\n     * @dev The amount of currency available to be lent.\\n     * @param token The loan currency.\\n     * @return The amount of `token` that can be borrowed.\\n     */\\n    function maxFlashLoan(\\n        address token\\n    ) external view returns (uint256);\\n\\n    /**\\n     * @dev The fee to be charged for a given loan.\\n     * @param token The loan currency.\\n     * @param amount The amount of tokens lent.\\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\\n     */\\n    function flashFee(\\n        address token,\\n        uint256 amount\\n    ) external view returns (uint256);\\n\\n    /**\\n     * @dev Initiate a flash loan.\\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\\n     * @param token The loan currency.\\n     * @param amount The amount of tokens lent.\\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\\n     */\\n    function flashLoan(\\n        IFlashBorrower receiver,\\n        address token,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external returns (bool);\\n}\",\"keccak256\":\"0xe646e328d9163cfbe2c1e0f78e5b4906a7fbbe3e510b112bdc8a7ea6f1f317e3\",\"license\":\"AGPL-1.0\"},\"contracts/interfaces/IRocketDepositPool.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\ninterface IRocketDepositPool {\\n    function deposit() external payable;\\n}\",\"keccak256\":\"0xb5bd33ff314d42c78c158ba13089d59e460f059acfa340f670caf01cef9b59ca\",\"license\":\"AGPL-1.0\"},\"contracts/interfaces/IRocketTokenRETH.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\nimport '../interfaces/IERC20.sol';\\n\\ninterface IRocketTokenRETH is IERC20 {\\n    function getEthValue(uint256 _rethAmount) external view returns (uint256);\\n    function getRethValue(uint256 _ethAmount) external view returns (uint256);\\n    function distributeRewards() payable external;\\n    function getTotalCollateral() external view returns (uint256);\\n    function burn(uint256 _rethAmount) external returns (uint256);\\n}\",\"keccak256\":\"0x4104ac5b3685a5f02b9dbe3c036cf985ac5c19f23c67bcb3150f11199a63410d\",\"license\":\"AGPL-1.0\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\nlibrary SafeMath {\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\",\"keccak256\":\"0x49990db7278b36c87d44c53dc2a9f306d5304a35a4e3add09305dbc844af920b\",\"license\":\"AGPL-1.0\"},\"contracts/stubs/FlashLoanBorrower.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\nimport '../libraries/SafeMath.sol';\\nimport '../interfaces/IFlashBorrower.sol';\\nimport '../interfaces/IFlashLender.sol';\\nimport '../interfaces/IRocketTokenRETH.sol';\\nimport '../interfaces/IRocketDepositPool.sol';\\nimport '../interfaces/IERC20.sol';\\n\\ncontract FlashLoanBorrower is IFlashBorrower {\\n    using SafeMath for uint256;\\n\\n    enum Action {NORMAL, OTHER}\\n\\n    address owner;\\n    IRocketDepositPool rocket_deposit_pool;\\n    IRocketTokenRETH reth_token;\\n    IFlashLender lender;\\n\\n    constructor(address _lender, address _reth_token_address, address _rocket_deposit_pool_address) {\\n        owner = msg.sender;\\n        lender = IFlashLender(_lender);\\n        reth_token = IRocketTokenRETH(_reth_token_address);\\n        rocket_deposit_pool = IRocketDepositPool(_rocket_deposit_pool_address);\\n    }\\n\\n    function fund() payable external {}\\n\\n    // this function gets called by the lender\\n    function onFlashLoan(\\n        address initiator,\\n        address,\\n        uint256,\\n        uint256 fee,\\n        bytes calldata data\\n    ) external override returns(bytes32) {\\n        require(\\n            msg.sender == address(lender),\\n            \\\"FlashBorrower: Untrusted lender\\\"\\n        );\\n        require(\\n            initiator == address(this),\\n            \\\"FlashBorrower: Untrusted loan initiator\\\"\\n        );\\n        (Action action) = abi.decode(data, (Action));\\n        if (action == Action.NORMAL) {\\n            require(address(this).balance > fee, \\\"You need to fund the stubbed borrower with more ETH.\\\");\\n            rocket_deposit_pool.deposit{ value: address(this).balance }();\\n        } \\n        return keccak256(\\\"ERC3156FlashBorrower.onFlashLoan\\\");\\n    }\\n\\n    function flashBorrow(\\n        uint256 amount\\n    ) public {\\n        bytes memory data = abi.encode(Action.NORMAL);\\n        uint256 _allowance = reth_token.allowance(address(this), address(lender));\\n        uint256 _fee = lender.flashFee(address(reth_token), amount);\\n        uint256 _repayment = amount + _fee;\\n        reth_token.approve(address(lender), _allowance + _repayment);\\n        lender.flashLoan(this, address(reth_token), amount, data);\\n    }\\n}\",\"keccak256\":\"0x9702b9b05d9980fe425cf7f11c2c78b49d148108307fba9b7a05b3a3339b3290\",\"license\":\"AGPL-1.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000fd938038062000fd983398181016040528101906200003791906200015a565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050620001fe565b6000815190506200015481620001e4565b92915050565b6000806000606084860312156200017057600080fd5b6000620001808682870162000143565b9350506020620001938682870162000143565b9250506040620001a68682870162000143565b9150509250925092565b6000620001bd82620001c4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ef81620001b0565b8114620001fb57600080fd5b50565b610dcb806200020e6000396000f3fe6080604052600436106100345760003560e01c806323e30c8b14610039578063b60d428814610076578063ee68fa9a14610080575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610772565b6100a9565b60405161006d9190610a8a565b60405180910390f35b61007e610329565b005b34801561008c57600080fd5b506100a760048036038101906100a29190610856565b61032b565b005b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461013b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013290610b4c565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146101a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a090610b2c565b60405180910390fd5b600083838101906101ba919061082d565b9050600060018111156101f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600181111561022f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156102fb57844711610277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026e90610b0c565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102e157600080fd5b505af11580156102f5573d6000803e3d6000fd5b50505050505b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99150509695505050505050565b565b60008060405160200161033e9190610af1565b60405160208183030381529060405290506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b81526004016103d0929190610a38565b60206040518083038186803b1580156103e857600080fd5b505afa1580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610420919061087f565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9d98ce4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b81526004016104a3929190610a61565b60206040518083038186803b1580156104bb57600080fd5b505afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f3919061087f565b9050600081856105039190610b99565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683866105729190610b99565b6040518363ffffffff1660e01b815260040161058f929190610a61565b602060405180830381600087803b1580156105a957600080fd5b505af11580156105bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190610804565b50600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635cffe9de30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688886040518563ffffffff1660e01b81526004016106659493929190610aa5565b602060405180830381600087803b15801561067f57600080fd5b505af1158015610693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b79190610804565b505050505050565b6000813590506106ce81610d40565b92915050565b6000815190506106e381610d57565b92915050565b60008083601f8401126106fb57600080fd5b8235905067ffffffffffffffff81111561071457600080fd5b60208301915083600182028301111561072c57600080fd5b9250929050565b60008135905061074281610d6e565b92915050565b60008135905061075781610d7e565b92915050565b60008151905061076c81610d7e565b92915050565b60008060008060008060a0878903121561078b57600080fd5b600061079989828a016106bf565b96505060206107aa89828a016106bf565b95505060406107bb89828a01610748565b94505060606107cc89828a01610748565b935050608087013567ffffffffffffffff8111156107e957600080fd5b6107f589828a016106e9565b92509250509295509295509295565b60006020828403121561081657600080fd5b6000610824848285016106d4565b91505092915050565b60006020828403121561083f57600080fd5b600061084d84828501610733565b91505092915050565b60006020828403121561086857600080fd5b600061087684828501610748565b91505092915050565b60006020828403121561089157600080fd5b600061089f8482850161075d565b91505092915050565b6108b181610bef565b82525050565b6108c081610c0d565b82525050565b60006108d182610b6c565b6108db8185610b77565b93506108eb818560208601610c8a565b6108f481610d1b565b840191505092915050565b61090881610c54565b82525050565b61091781610c78565b82525050565b600061092a603483610b88565b91507f596f75206e65656420746f2066756e6420746865207374756262656420626f7260008301527f726f7765722077697468206d6f7265204554482e0000000000000000000000006020830152604082019050919050565b6000610990602783610b88565b91507f466c617368426f72726f7765723a20556e74727573746564206c6f616e20696e60008301527f69746961746f72000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006109f6601f83610b88565b91507f466c617368426f72726f7765723a20556e74727573746564206c656e646572006000830152602082019050919050565b610a3281610c4a565b82525050565b6000604082019050610a4d60008301856108a8565b610a5a60208301846108a8565b9392505050565b6000604082019050610a7660008301856108a8565b610a836020830184610a29565b9392505050565b6000602082019050610a9f60008301846108b7565b92915050565b6000608082019050610aba60008301876108ff565b610ac760208301866108a8565b610ad46040830185610a29565b8181036060830152610ae681846108c6565b905095945050505050565b6000602082019050610b06600083018461090e565b92915050565b60006020820190508181036000830152610b258161091d565b9050919050565b60006020820190508181036000830152610b4581610983565b9050919050565b60006020820190508181036000830152610b65816109e9565b9050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610ba482610c4a565b9150610baf83610c4a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610be457610be3610cbd565b5b828201905092915050565b6000610bfa82610c2a565b9050919050565b60008115159050919050565b6000819050919050565b6000819050610c2582610d2c565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c5f82610c66565b9050919050565b6000610c7182610c2a565b9050919050565b6000610c8382610c17565b9050919050565b60005b83811015610ca8578082015181840152602081019050610c8d565b83811115610cb7576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000601f19601f8301169050919050565b60028110610d3d57610d3c610cec565b5b50565b610d4981610bef565b8114610d5457600080fd5b50565b610d6081610c01565b8114610d6b57600080fd5b50565b60028110610d7b57600080fd5b50565b610d8781610c4a565b8114610d9257600080fd5b5056fea2646970667358221220ea0acf579784716cc48b3372ef8c5cbabd86c070412a75d29246168ffd2c2c3064736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c806323e30c8b14610039578063b60d428814610076578063ee68fa9a14610080575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610772565b6100a9565b60405161006d9190610a8a565b60405180910390f35b61007e610329565b005b34801561008c57600080fd5b506100a760048036038101906100a29190610856565b61032b565b005b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461013b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013290610b4c565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146101a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a090610b2c565b60405180910390fd5b600083838101906101ba919061082d565b9050600060018111156101f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600181111561022f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156102fb57844711610277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026e90610b0c565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102e157600080fd5b505af11580156102f5573d6000803e3d6000fd5b50505050505b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99150509695505050505050565b565b60008060405160200161033e9190610af1565b60405160208183030381529060405290506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b81526004016103d0929190610a38565b60206040518083038186803b1580156103e857600080fd5b505afa1580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610420919061087f565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9d98ce4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b81526004016104a3929190610a61565b60206040518083038186803b1580156104bb57600080fd5b505afa1580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f3919061087f565b9050600081856105039190610b99565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683866105729190610b99565b6040518363ffffffff1660e01b815260040161058f929190610a61565b602060405180830381600087803b1580156105a957600080fd5b505af11580156105bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e19190610804565b50600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635cffe9de30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1688886040518563ffffffff1660e01b81526004016106659493929190610aa5565b602060405180830381600087803b15801561067f57600080fd5b505af1158015610693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b79190610804565b505050505050565b6000813590506106ce81610d40565b92915050565b6000815190506106e381610d57565b92915050565b60008083601f8401126106fb57600080fd5b8235905067ffffffffffffffff81111561071457600080fd5b60208301915083600182028301111561072c57600080fd5b9250929050565b60008135905061074281610d6e565b92915050565b60008135905061075781610d7e565b92915050565b60008151905061076c81610d7e565b92915050565b60008060008060008060a0878903121561078b57600080fd5b600061079989828a016106bf565b96505060206107aa89828a016106bf565b95505060406107bb89828a01610748565b94505060606107cc89828a01610748565b935050608087013567ffffffffffffffff8111156107e957600080fd5b6107f589828a016106e9565b92509250509295509295509295565b60006020828403121561081657600080fd5b6000610824848285016106d4565b91505092915050565b60006020828403121561083f57600080fd5b600061084d84828501610733565b91505092915050565b60006020828403121561086857600080fd5b600061087684828501610748565b91505092915050565b60006020828403121561089157600080fd5b600061089f8482850161075d565b91505092915050565b6108b181610bef565b82525050565b6108c081610c0d565b82525050565b60006108d182610b6c565b6108db8185610b77565b93506108eb818560208601610c8a565b6108f481610d1b565b840191505092915050565b61090881610c54565b82525050565b61091781610c78565b82525050565b600061092a603483610b88565b91507f596f75206e65656420746f2066756e6420746865207374756262656420626f7260008301527f726f7765722077697468206d6f7265204554482e0000000000000000000000006020830152604082019050919050565b6000610990602783610b88565b91507f466c617368426f72726f7765723a20556e74727573746564206c6f616e20696e60008301527f69746961746f72000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006109f6601f83610b88565b91507f466c617368426f72726f7765723a20556e74727573746564206c656e646572006000830152602082019050919050565b610a3281610c4a565b82525050565b6000604082019050610a4d60008301856108a8565b610a5a60208301846108a8565b9392505050565b6000604082019050610a7660008301856108a8565b610a836020830184610a29565b9392505050565b6000602082019050610a9f60008301846108b7565b92915050565b6000608082019050610aba60008301876108ff565b610ac760208301866108a8565b610ad46040830185610a29565b8181036060830152610ae681846108c6565b905095945050505050565b6000602082019050610b06600083018461090e565b92915050565b60006020820190508181036000830152610b258161091d565b9050919050565b60006020820190508181036000830152610b4581610983565b9050919050565b60006020820190508181036000830152610b65816109e9565b9050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610ba482610c4a565b9150610baf83610c4a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610be457610be3610cbd565b5b828201905092915050565b6000610bfa82610c2a565b9050919050565b60008115159050919050565b6000819050919050565b6000819050610c2582610d2c565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c5f82610c66565b9050919050565b6000610c7182610c2a565b9050919050565b6000610c8382610c17565b9050919050565b60005b83811015610ca8578082015181840152602081019050610c8d565b83811115610cb7576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000601f19601f8301169050919050565b60028110610d3d57610d3c610cec565b5b50565b610d4981610bef565b8114610d5457600080fd5b50565b610d6081610c01565b8114610d6b57600080fd5b50565b60028110610d7b57600080fd5b50565b610d8781610c4a565b8114610d9257600080fd5b5056fea2646970667358221220ea0acf579784716cc48b3372ef8c5cbabd86c070412a75d29246168ffd2c2c3064736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2762,
        "contract": "contracts/stubs/FlashLoanBorrower.sol:FlashLoanBorrower",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2765,
        "contract": "contracts/stubs/FlashLoanBorrower.sol:FlashLoanBorrower",
        "label": "rocket_deposit_pool",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IRocketDepositPool)2152"
      },
      {
        "astId": 2768,
        "contract": "contracts/stubs/FlashLoanBorrower.sol:FlashLoanBorrower",
        "label": "reth_token",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IRocketTokenRETH)2373"
      },
      {
        "astId": 2771,
        "contract": "contracts/stubs/FlashLoanBorrower.sol:FlashLoanBorrower",
        "label": "lender",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IFlashLender)2146"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IFlashLender)2146": {
        "encoding": "inplace",
        "label": "contract IFlashLender",
        "numberOfBytes": "20"
      },
      "t_contract(IRocketDepositPool)2152": {
        "encoding": "inplace",
        "label": "contract IRocketDepositPool",
        "numberOfBytes": "20"
      },
      "t_contract(IRocketTokenRETH)2373": {
        "encoding": "inplace",
        "label": "contract IRocketTokenRETH",
        "numberOfBytes": "20"
      }
    }
  }
}