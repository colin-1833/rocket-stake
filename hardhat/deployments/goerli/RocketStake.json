{
  "address": "0xfb5678Fb1C3DEdd390BdBD992f16F582C75b54c0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rocket_storage_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawn_eth",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "staked_reth",
          "type": "uint256"
        }
      ],
      "name": "AccountWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reth_added_to_stake",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eth_added_to_stake",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "staked_reth",
          "type": "uint256"
        }
      ],
      "name": "AddStake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker_address",
          "type": "address"
        }
      ],
      "name": "Register",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FLASH_LOAN_CALLBACK_SUCCESS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "accountBuyerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "accountDepositDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_last_deposit_block",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_block_number",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deposit_delay",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "accountExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "accountStakedETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "staked_eth",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "accountStakedRETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "staked_reth",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "depositCooldownPassed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "next_contract_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eth_amount",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalETHHeld",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalRETHCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalRETHHeld",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "eth_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4b25cf3e6bb4b044d8438fbc8f215b60f4321793913761b44d780c4118a28d15",
  "receipt": {
    "to": null,
    "from": "0xb89282E1Ae6e496a4817298e8bf2E5CbF5a4b770",
    "contractAddress": "0xfb5678Fb1C3DEdd390BdBD992f16F582C75b54c0",
    "transactionIndex": 4,
    "gasUsed": "3466206",
    "logsBloom": "0x
    "blockHash": "0xade2e71a2ede13e3999daa91fbb8f94d7b8973ba53262b58faff3ef74c57cfe6",
    "transactionHash": "0x4b25cf3e6bb4b044d8438fbc8f215b60f4321793913761b44d780c4118a28d15",
    "logs": [],
    "blockNumber": 5258026,
    "cumulativeGasUsed": "9046259",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd8Cd47263414aFEca62d6e2a3917d6600abDceB3"
  ],
  "solcInputHash": "eb60ea145368ff19de1216714210e9a2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rocket_storage_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawn_eth\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"staked_reth\",\"type\":\"uint256\"}],\"name\":\"AccountWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reth_added_to_stake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_added_to_stake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"staked_reth\",\"type\":\"uint256\"}],\"name\":\"AddStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker_address\",\"type\":\"address\"}],\"name\":\"Register\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FLASH_LOAN_CALLBACK_SUCCESS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"accountBuyerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"accountDepositDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_last_deposit_block\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_block_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deposit_delay\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"accountExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"accountStakedETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"staked_eth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"accountStakedRETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"staked_reth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"depositCooldownPassed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"next_contract_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalETHHeld\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRETHCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRETHHeld\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RocketStake.sol\":\"RocketStake\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/RocketStake.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\nimport './libraries/Counters.sol';\\nimport './libraries/SafeMath.sol';\\nimport './interfaces/IERC20.sol';\\nimport './interfaces/IRocketStake.sol';\\nimport './interfaces/IRocketStorage.sol';\\nimport './interfaces/IMigrationCompatible.sol';\\nimport './interfaces/IRocketDepositPool.sol';\\nimport './interfaces/IRocketTokenRETH.sol';\\n\\ncontract RETHBuyer {\\n    using SafeMath for uint256;\\n    \\n    address rocket_storage_address;\\n    address rocket_stake_address;\\n\\n    constructor(address _rocket_storage_address, address _rocket_stake_address) {\\n        rocket_storage_address = _rocket_storage_address;\\n        rocket_stake_address = _rocket_stake_address;\\n    }\\n\\n    function burn(uint256 reth_amount) external returns(uint256 _eth_received) {\\n        require(msg.sender == rocket_stake_address, \\\"Only RocketStake can do that\\\");\\n        IRocketStorage rocket_storage = IRocketStorage(rocket_storage_address);\\n        IRocketTokenRETH rocket_token_reth = IRocketTokenRETH(rocket_storage.getAddress(keccak256(abi.encodePacked(\\\"contract.address\\\", \\\"rocketTokenRETH\\\"))));\\n        uint256 starting_balance = address(this).balance;\\n        rocket_token_reth.burn(reth_amount);\\n        uint256 eth_received = address(this).balance.sub(starting_balance);\\n        payable(rocket_stake_address).transfer(eth_received);\\n        return eth_received;\\n    } \\n\\n    function deposit() payable external returns(uint256 _reth_added_to_stake) {\\n        require(msg.sender == rocket_stake_address, \\\"Only RocketStake can do that\\\");\\n        IRocketStorage rocket_storage = IRocketStorage(rocket_storage_address);\\n        IRocketDepositPool rocket_deposit_pool = IRocketDepositPool(rocket_storage.getAddress(keccak256(abi.encodePacked(\\\"contract.address\\\", \\\"rocketDepositPool\\\"))));\\n        IRocketTokenRETH rocket_token_reth = IRocketTokenRETH(rocket_storage.getAddress(keccak256(abi.encodePacked(\\\"contract.address\\\", \\\"rocketTokenRETH\\\"))));\\n        uint256 reth_supply_before = rocket_token_reth.balanceOf(address(this));\\n        rocket_deposit_pool.deposit{ value: msg.value }();\\n        uint256 reth_supply_after = rocket_token_reth.balanceOf(address(this));\\n        uint256 reth_added_to_stake = reth_supply_after.sub(reth_supply_before);\\n        return reth_added_to_stake;\\n    }\\n\\n    function lastDepositBlock() external view returns(uint256 _last_deposit_block) {\\n        require(msg.sender == rocket_stake_address, \\\"Only RocketStake can do that\\\");\\n        IRocketStorage rocket_storage = IRocketStorage(rocket_storage_address);\\n        return rocket_storage.getUint(keccak256(abi.encodePacked(\\\"user.deposit.block\\\", address(this))));\\n    }\\n}\\n\\ncontract RocketStake is IRocketStake {\\n    using SafeMath for uint256;\\n\\n    struct Staker {\\n        RETHBuyer reth_buyer;\\n        uint256 staked_reth;\\n        bool exists;\\n    }\\n\\n    mapping(address => Staker) internal stakers;\\n    address rocket_storage_address;\\n    bytes32 public constant FLASH_LOAN_CALLBACK_SUCCESS = keccak256(\\\"ERC3156FlashBorrower.onFlashLoan\\\");\\n\\n    constructor(address _rocket_storage_address) {\\n        rocket_storage_address = _rocket_storage_address;\\n    }\\n\\n    receive() external payable {}\\n\\n    function register() external override {\\n        if (stakers[msg.sender].exists != true) {\\n            stakers[msg.sender].exists = true;\\n            stakers[msg.sender].reth_buyer = new RETHBuyer(rocket_storage_address, address(this));\\n            emit Register(msg.sender);\\n        }\\n    }\\n\\n    function stake() external payable override {\\n        require(msg.value > 0, \\\"You must send a non-zero amount of eth to stake.\\\");\\n        \\n        // register and create reth_buyer if doesn't exist already\\n        if (stakers[msg.sender].exists != true) {\\n            stakers[msg.sender].exists = true;\\n            stakers[msg.sender].reth_buyer = new RETHBuyer(rocket_storage_address, address(this));\\n            emit Register(msg.sender);\\n        }\\n\\n        // have the buyer deposit eth for rETH\\n        // the reth_buyer deposit function sends the rETH back to this contract for flashloan supply\\n        uint256 reth_added_to_stake = stakers[msg.sender].reth_buyer.deposit{ value: msg.value }();\\n        stakers[msg.sender].staked_reth = stakers[msg.sender].staked_reth.add(reth_added_to_stake);\\n        emit AddStake(msg.sender, reth_added_to_stake, msg.value, stakers[msg.sender].staked_reth);\\n    }\\n\\n    function withdraw(uint256 eth_amount) external override {\\n        require(stakers[msg.sender].exists == true, \\\"Nothing staked here.\\\");\\n        require(stakers[msg.sender].staked_reth > 0, \\\"Nothing staked here.\\\");\\n        require(eth_amount > 0, \\\"You must withdraw more than 0 ETH\\\");\\n        require(depositCooldownPassed(msg.sender) == true, \\\"Rocket Pool will not let you move or withdraw your rETH yet.\\\");\\n        \\n        // setup RP contracts\\n        IRocketStorage rocket_storage = IRocketStorage(rocket_storage_address);\\n        IRocketTokenRETH rocket_token_reth = IRocketTokenRETH(rocket_storage.getAddress(keccak256(abi.encodePacked(\\\"contract.address\\\", \\\"rocketTokenRETH\\\"))));\\n        \\n        // ensure there is enough eth available in RP's system\\n        require(rocket_token_reth.getTotalCollateral() >= eth_amount, \\\"Not enough collateral available in Rocket Pool\\\");\\n\\n        // make sure we're not trying to withdraw more ETH than our rETH share is worth\\n        uint256 eth_able_to_be_withdrawn = rocket_token_reth.getEthValue(stakers[msg.sender].staked_reth);\\n        require(eth_amount <= eth_able_to_be_withdrawn, \\\"You cannot withdraw more ETH than you have staked.\\\");\\n\\n        // transfer the reth to burn to the buyer contract, run the burn function, and deduct the total burnt\\n        uint256 reth_to_burn = rocket_token_reth.getRethValue(eth_amount);\\n        uint256 eth_received = stakers[msg.sender].reth_buyer.burn(reth_to_burn);\\n        stakers[msg.sender].staked_reth = stakers[msg.sender].staked_reth.sub(reth_to_burn);\\n\\n        // transfer staker ETH last to prevent re-entrancy\\n        payable(msg.sender).transfer(eth_received);\\n        emit AccountWithdraw(msg.sender, eth_received, stakers[msg.sender].staked_reth);\\n    }\\n\\n    function migrate(\\n        address next_contract_address,\\n        uint256 eth_amount\\n    ) override public {\\n        // make sure there is a stake to migrate and \\n        // that we aren't migrating into a non-existant address\\n        require(stakers[msg.sender].staked_reth > 0, \\\"You are not staking any ETH\\\");\\n        require(next_contract_address != address(0), \\\"Cannot migrate to non-existant contract\\\");\\n        require(depositCooldownPassed(msg.sender) == true, \\\"Rocket Pool will not let you move or withdraw your rETH yet.\\\");\\n\\n        // setup RP contracts\\n        IRocketStorage rocket_storage = IRocketStorage(rocket_storage_address);\\n        IRocketTokenRETH rocket_token_reth = IRocketTokenRETH(rocket_storage.getAddress(keccak256(abi.encodePacked(\\\"contract.address\\\", \\\"rocketTokenRETH\\\"))));\\n\\n        // calculate the ETH value of our rETH staked and prevent overdrawing\\n        uint256 eth_able_to_be_withdrawn = rocket_token_reth.getEthValue(stakers[msg.sender].staked_reth);\\n        require(eth_amount <= eth_able_to_be_withdrawn, \\\"You cannot migrate that much.\\\");\\n\\n        // find the exact amount of rETH to transfer and decrement staked_reth balance\\n        uint256 reth_amount = rocket_token_reth.getRethValue(eth_amount);\\n        stakers[msg.sender].staked_reth = stakers[msg.sender].staked_reth.sub(reth_amount);\\n\\n        // go through the transfer protocol, caller better know they can trust the contract their migrating to\\n        IMigrationCompatible(next_contract_address).startTransfer(reth_amount, msg.sender);\\n        rocket_token_reth.transfer(next_contract_address, reth_amount);\\n        IMigrationCompatible(next_contract_address).closeTransfer(reth_amount, msg.sender);\\n    }\\n\\n    function accountDepositDelay(address staker) override external view returns(\\n        uint256 _last_deposit_block,\\n        uint256 _block_number,\\n        uint256 _deposit_delay\\n    ) {\\n        IRocketStorage rocket_storage = IRocketStorage(rocket_storage_address);\\n        uint256 deposit_delay = rocket_storage.getUint(keccak256(abi.encodePacked(keccak256(\\\"dao.protocol.setting.network\\\"), \\\"network.reth.deposit.delay\\\")));\\n        return(\\n            stakers[staker].exists == true \\n                ? stakers[staker].reth_buyer.lastDepositBlock()\\n                : 0,\\n            block.number,\\n            deposit_delay\\n        );\\n    }\\n    \\n    function accountStakedETH(address staker) override external view returns(uint256 staked_eth) {\\n        IRocketStorage rocket_storage = IRocketStorage(rocket_storage_address);\\n        IRocketTokenRETH rocket_token_reth = IRocketTokenRETH(rocket_storage.getAddress(keccak256(abi.encodePacked(\\\"contract.address\\\", \\\"rocketTokenRETH\\\"))));\\n        return rocket_token_reth.getEthValue(stakers[staker].staked_reth);\\n    }\\n\\n    function accountStakedRETH(address staker) override external view returns(uint256 staked_reth) {\\n        return stakers[staker].staked_reth;\\n    }\\n\\n    function accountExists(address staker) override external view returns(bool exists) {\\n        return stakers[staker].exists;\\n    }\\n\\n    function accountBuyerAddress(address staker) external view returns(address) {\\n        return stakers[staker].exists == true ? address(stakers[staker].reth_buyer) : address(0);\\n    }\\n\\n    function totalRETHCollateral() external override view returns(uint256 collateral) {\\n        IRocketStorage rocket_storage = IRocketStorage(rocket_storage_address);\\n        IRocketTokenRETH rocket_token_reth = IRocketTokenRETH(rocket_storage.getAddress(keccak256(abi.encodePacked(\\\"contract.address\\\", \\\"rocketTokenRETH\\\"))));\\n        return rocket_token_reth.getTotalCollateral();\\n    }\\n\\n    function totalRETHHeld() external override view returns(uint256 collateral) {\\n        IRocketStorage rocket_storage = IRocketStorage(rocket_storage_address);\\n        IERC20 rocket_token_reth = IERC20(rocket_storage.getAddress(keccak256(abi.encodePacked(\\\"contract.address\\\", \\\"rocketTokenRETH\\\"))));\\n        return rocket_token_reth.balanceOf(address(this));\\n    }\\n\\n    function totalETHHeld() external override view returns(uint256 collateral) {\\n        IRocketStorage rocket_storage = IRocketStorage(rocket_storage_address);\\n        IRocketTokenRETH rocket_token_reth = IRocketTokenRETH(rocket_storage.getAddress(keccak256(abi.encodePacked(\\\"contract.address\\\", \\\"rocketTokenRETH\\\"))));\\n        return rocket_token_reth.getEthValue(rocket_token_reth.balanceOf(address(this)));\\n    }\\n\\n    function depositCooldownPassed(address staker) public override view returns(bool) {\\n        IRocketStorage rocket_storage = IRocketStorage(rocket_storage_address);\\n        uint256 deposit_delay = rocket_storage.getUint(keccak256(abi.encodePacked(keccak256(\\\"dao.protocol.setting.network\\\"), \\\"network.reth.deposit.delay\\\")));\\n        if (stakers[staker].exists != true) {\\n            return true;\\n        }\\n        return block.timestamp.sub(stakers[staker].reth_buyer.lastDepositBlock()) > deposit_delay;\\n    }\\n}\",\"keccak256\":\"0x4394d4361444c9a10aaff7f00644977ff91e3614612bd06c8c9f1cf9134832d3\",\"license\":\"AGPL-1.0\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n    function balanceOf(address account) external view returns (uint256);\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n    function approve(address spender, uint256 amount) external returns (bool);\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\",\"keccak256\":\"0x5bbe210d3ee7f8913d5ab8cc3543f6b073e085f7e234632861d5e5ae99cf0712\",\"license\":\"AGPL-1.0\"},\"contracts/interfaces/IMigrationCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\ninterface IMigrationCompatible {\\n    function startTransfer(uint256 reth_amount, address staker) external; \\n    function closeTransfer(uint256 reth_amount, address staker) external;\\n}\",\"keccak256\":\"0xdc521df01124b36fb12bbe8f4eac66c2663b23f455d908b727eb6d8a3910a601\",\"license\":\"AGPL-1.0\"},\"contracts/interfaces/IRocketDepositPool.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\ninterface IRocketDepositPool {\\n    function deposit() external payable;\\n}\",\"keccak256\":\"0xb5bd33ff314d42c78c158ba13089d59e460f059acfa340f670caf01cef9b59ca\",\"license\":\"AGPL-1.0\"},\"contracts/interfaces/IRocketStake.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\ninterface IRocketStake {\\n    function stake() external payable; \\n    function withdraw(uint256 eth_amount) external;\\n    function totalRETHCollateral() external view returns(uint256);\\n    function totalRETHHeld() external view returns(uint256);\\n    function totalETHHeld() external view returns(uint256);\\n    function register() external;\\n    function migrate(address next_contract_address, uint256 eth_amount) external;\\n    function depositCooldownPassed(address staker) external view returns(bool);\\n    function accountDepositDelay(address staker) external view returns(\\n        uint256 _last_deposit_block,\\n        uint256 _block_number,\\n        uint256 _deposit_delay\\n    );\\n    function accountStakedRETH(address staker) external view returns(uint256 staked_reth);\\n    function accountExists(address staker) external view returns(bool exists);\\n    function accountStakedETH(address staker) external view returns(uint256 eth_amount);\\n\\n    event Register(address indexed staker_address);\\n    event AddStake(address indexed staker_address, uint256 reth_added_to_stake, uint256 eth_added_to_stake, uint256 staked_reth);\\n    event AccountWithdraw(address indexed staker_address, uint256 withdrawn_eth, uint256 staked_reth);\\n}\",\"keccak256\":\"0x50f517ae02b6450eb0877581e8d593bf09d1c0e222e91723101cdba0b5d2239e\",\"license\":\"AGPL-1.0\"},\"contracts/interfaces/IRocketStorage.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\ninterface IRocketStorage {\\n    function getUint(bytes32 _key) external view returns (uint);\\n    function getAddress(bytes32 _key) external view returns (address);\\n}\",\"keccak256\":\"0x4617dda7613f23f150ba847944391d7e6f4c60573986bf49b0b5cfa4548e4af5\",\"license\":\"AGPL-1.0\"},\"contracts/interfaces/IRocketTokenRETH.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\nimport '../interfaces/IERC20.sol';\\n\\ninterface IRocketTokenRETH is IERC20 {\\n    function getEthValue(uint256 _rethAmount) external view returns (uint256);\\n    function getRethValue(uint256 _ethAmount) external view returns (uint256);\\n    function distributeRewards() payable external;\\n    function getTotalCollateral() external view returns (uint256);\\n    function burn(uint256 _rethAmount) external returns (uint256);\\n}\",\"keccak256\":\"0x4104ac5b3685a5f02b9dbe3c036cf985ac5c19f23c67bcb3150f11199a63410d\",\"license\":\"AGPL-1.0\"},\"contracts/libraries/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\nlibrary Counters {\\n    struct Counter {\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\",\"keccak256\":\"0x28482f213b4aabbe37903f331f1f240271d5cc3bc7a2c20fc3cdf0e4380d7788\",\"license\":\"AGPL-1.0\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-1.0\\npragma solidity ^0.8.0;\\n\\nlibrary SafeMath {\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\",\"keccak256\":\"0x49990db7278b36c87d44c53dc2a9f306d5304a35a4e3add09305dbc844af920b\",\"license\":\"AGPL-1.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003eaa38038062003eaa833981810160405281019062000037919062000096565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000110565b6000815190506200009081620000f6565b92915050565b600060208284031215620000a957600080fd5b6000620000b9848285016200007f565b91505092915050565b6000620000cf82620000d6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010181620000c2565b81146200010d57600080fd5b50565b613d8a80620001206000396000f3fe608060405260043610620000f75760003560e01c806395919404116200008b578063bc7f2f401162000061578063bc7f2f4014620002f6578063c4893c51146200033c578063df58358f1462000380578063dff1735714620003b057620000ff565b8063959194041462000240578063ab4428281462000284578063ad68ebf714620002c857620000ff565b80632e1a7d4d11620000cd5780632e1a7d4d14620001925780633a4b66f114620001c057806375cd51ed14620001cc57806375d9ad1b146200021057620000ff565b806310cbe69214620001045780631aa3a00814620001485780632accfc04146200016257620000ff565b36620000ff57005b600080fd5b3480156200011157600080fd5b506200013060048036038101906200012a919062002516565b620003e0565b6040516200013f919062002cbf565b60405180910390f35b3480156200015557600080fd5b50620001606200042b565b005b3480156200016f57600080fd5b506200017a62000602565b60405162000189919062002cbf565b60405180910390f35b3480156200019f57600080fd5b50620001be6004803603810190620001b89190620025db565b62000807565b005b620001ca62000f88565b005b348015620001d957600080fd5b50620001f86004803603810190620001f2919062002516565b620013c0565b60405162000207919062002b53565b60405180910390f35b3480156200021d57600080fd5b506200022862001418565b60405162000237919062002b70565b60405180910390f35b3480156200024d57600080fd5b506200026c600480360381019062000266919062002516565b6200143c565b6040516200027b919062002adc565b60405180910390f35b3480156200029157600080fd5b50620002b06004803603810190620002aa919062002516565b6200150b565b604051620002bf919062002cbf565b60405180910390f35b348015620002d557600080fd5b50620002f46004803603810190620002ee91906200256e565b620016c5565b005b3480156200030357600080fd5b506200032260048036038101906200031c919062002516565b62001cb9565b604051620003339392919062002d36565b60405180910390f35b3480156200034957600080fd5b5062000368600480360381019062000362919062002516565b62001f17565b60405162000377919062002b53565b60405180910390f35b3480156200038d57600080fd5b506200039862002184565b604051620003a7919062002cbf565b60405180910390f35b348015620003bd57600080fd5b50620003c8620022ee565b604051620003d7919062002cbf565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16151514620006005760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630604051620005129062002495565b6200051f92919062002af9565b604051809103906000f0801580156200053c573d6000803e3d6000fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167feeda149c76076b34d4b9d8896c2f7efc0d33d1c7b53ea3c5db490d64613f603a60405160405180910390a25b565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a721604051602001620006599062002ab8565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016200068d919062002b70565b60206040518083038186803b158015620006a657600080fd5b505afa158015620006bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006e1919062002542565b90508073ffffffffffffffffffffffffffffffffffffffff16638b32fa238273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016200073a919062002adc565b60206040518083038186803b1580156200075357600080fd5b505afa15801562000768573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078e919062002607565b6040518263ffffffff1660e01b8152600401620007ac919062002cbf565b60206040518083038186803b158015620007c557600080fd5b505afa158015620007da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000800919062002607565b9250505090565b600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff161515146200089f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008969062002c15565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541162000926576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200091d9062002c15565b60405180910390fd5b600081116200096c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009639062002c7b565b60405180910390fd5b600115156200097b3362001f17565b151514620009c0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009b79062002bd1565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a72160405160200162000a169062002ab8565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040162000a4a919062002b70565b60206040518083038186803b15801562000a6357600080fd5b505afa15801562000a78573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a9e919062002542565b9050828173ffffffffffffffffffffffffffffffffffffffff1663d6eb59106040518163ffffffff1660e01b815260040160206040518083038186803b15801562000ae857600080fd5b505afa15801562000afd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b23919062002607565b101562000b67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000b5e9062002baf565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff16638b32fa236000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518263ffffffff1660e01b815260040162000be5919062002cbf565b60206040518083038186803b15801562000bfe57600080fd5b505afa15801562000c13573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c39919062002607565b90508084111562000c81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000c789062002c37565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16634346f03e866040518263ffffffff1660e01b815260040162000cbe919062002cbf565b60206040518083038186803b15801562000cd757600080fd5b505afa15801562000cec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d12919062002607565b905060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68836040518263ffffffff1660e01b815260040162000db2919062002cbf565b602060405180830381600087803b15801562000dcd57600080fd5b505af115801562000de2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e08919062002607565b905062000e60826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546200246590919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801562000eec573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f9f167690f6f00e8e808e35862cdeaf34a0841f5fbdfcd2847e5efe7ea97d94d8826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460405162000f7892919062002d09565b60405180910390a2505050505050565b6000341162000fce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000fc59062002b8d565b60405180910390fd5b600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16151514620011a35760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630604051620010b59062002495565b620010c292919062002af9565b604051809103906000f080158015620010df573d6000803e3d6000fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167feeda149c76076b34d4b9d8896c2f7efc0d33d1c7b53ea3c5db490d64613f603a60405160405180910390a25b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016020604051808303818588803b1580156200124f57600080fd5b505af115801562001264573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200128b919062002607565b9050620012e3816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546200247d90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167f3877d5db8b1acb5d5192548366adcabea5b036233d0be9fc10723a5188d900ec82346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051620013b59392919062002d36565b60405180910390a250565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff169050919050565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd981565b6000600115156000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16151514620014a157600062001504565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b9050919050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a721604051602001620015629062002ab8565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040162001596919062002b70565b60206040518083038186803b158015620015af57600080fd5b505afa158015620015c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015ea919062002542565b90508073ffffffffffffffffffffffffffffffffffffffff16638b32fa236000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518263ffffffff1660e01b815260040162001668919062002cbf565b60206040518083038186803b1580156200168157600080fd5b505afa15801562001696573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016bc919062002607565b92505050919050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154116200174c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620017439062002c59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620017bf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620017b69062002bf3565b60405180910390fd5b60011515620017ce3362001f17565b15151462001813576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200180a9062002bd1565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a721604051602001620018699062002ab8565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016200189d919062002b70565b60206040518083038186803b158015620018b657600080fd5b505afa158015620018cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018f1919062002542565b905060008173ffffffffffffffffffffffffffffffffffffffff16638b32fa236000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518263ffffffff1660e01b815260040162001971919062002cbf565b60206040518083038186803b1580156200198a57600080fd5b505afa1580156200199f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019c5919062002607565b90508084111562001a0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162001a049062002c9d565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16634346f03e866040518263ffffffff1660e01b815260040162001a4a919062002cbf565b60206040518083038186803b15801562001a6357600080fd5b505afa15801562001a78573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a9e919062002607565b905062001af6816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546200246590919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055508573ffffffffffffffffffffffffffffffffffffffff166345ca631f82336040518363ffffffff1660e01b815260040162001b7892919062002cdc565b600060405180830381600087803b15801562001b9357600080fd5b505af115801562001ba8573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87836040518363ffffffff1660e01b815260040162001be992919062002b26565b602060405180830381600087803b15801562001c0457600080fd5b505af115801562001c19573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c3f9190620025af565b508573ffffffffffffffffffffffffffffffffffffffff1663b01f0a6b82336040518363ffffffff1660e01b815260040162001c7d92919062002cdc565b600060405180830381600087803b15801562001c9857600080fd5b505af115801562001cad573d6000803e3d6000fd5b50505050505050505050565b600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663bd02d0f57f7cb36cfba78818e097a3d983f102f9107317663854a5d185ea320a1e1a7da21560405160200162001d35919062002a8e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040162001d69919062002b70565b60206040518083038186803b15801562001d8257600080fd5b505afa15801562001d97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001dbd919062002607565b9050600115156000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615151462001e2257600062001f06565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a3d7c816040518163ffffffff1660e01b815260040160206040518083038186803b15801562001eca57600080fd5b505afa15801562001edf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f05919062002607565b5b438294509450945050509193909250565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663bd02d0f57f7cb36cfba78818e097a3d983f102f9107317663854a5d185ea320a1e1a7da21560405160200162001f90919062002a8e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040162001fc4919062002b70565b60206040518083038186803b15801562001fdd57600080fd5b505afa15801562001ff2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002018919062002607565b9050600115156000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615151462002081576001925050506200217f565b80620021796000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a3d7c816040518163ffffffff1660e01b815260040160206040518083038186803b1580156200212e57600080fd5b505afa15801562002143573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002169919062002607565b426200246590919063ffffffff16565b11925050505b919050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a721604051602001620021db9062002ab8565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016200220f919062002b70565b60206040518083038186803b1580156200222857600080fd5b505afa1580156200223d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002263919062002542565b90508073ffffffffffffffffffffffffffffffffffffffff1663d6eb59106040518163ffffffff1660e01b815260040160206040518083038186803b158015620022ac57600080fd5b505afa158015620022c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022e7919062002607565b9250505090565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a721604051602001620023459062002ab8565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040162002379919062002b70565b60206040518083038186803b1580156200239257600080fd5b505afa158015620023a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023cd919062002542565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016200240a919062002adc565b60206040518083038186803b1580156200242357600080fd5b505afa15801562002438573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200245e919062002607565b9250505090565b6000818362002475919062002dec565b905092915050565b600081836200248d919062002d8f565b905092915050565b610e528062002f0383390190565b600081359050620024b48162002eb4565b92915050565b600081519050620024cb8162002eb4565b92915050565b600081519050620024e28162002ece565b92915050565b600081359050620024f98162002ee8565b92915050565b600081519050620025108162002ee8565b92915050565b6000602082840312156200252957600080fd5b60006200253984828501620024a3565b91505092915050565b6000602082840312156200255557600080fd5b60006200256584828501620024ba565b91505092915050565b600080604083850312156200258257600080fd5b60006200259285828601620024a3565b9250506020620025a585828601620024e8565b9150509250929050565b600060208284031215620025c257600080fd5b6000620025d284828501620024d1565b91505092915050565b600060208284031215620025ee57600080fd5b6000620025fe84828501620024e8565b91505092915050565b6000602082840312156200261a57600080fd5b60006200262a84828501620024ff565b91505092915050565b6200263e8162002e27565b82525050565b6200264f8162002e3b565b82525050565b620026608162002e47565b82525050565b6200267b620026758262002e47565b62002e7b565b82525050565b60006200269060308362002d73565b91507f596f75206d7573742073656e642061206e6f6e2d7a65726f20616d6f756e742060008301527f6f662065746820746f207374616b652e000000000000000000000000000000006020830152604082019050919050565b6000620026f8601a8362002d84565b91507f6e6574776f726b2e726574682e6465706f7369742e64656c61790000000000006000830152601a82019050919050565b60006200273a600f8362002d84565b91507f726f636b6574546f6b656e5245544800000000000000000000000000000000006000830152600f82019050919050565b60006200277c602e8362002d73565b91507f4e6f7420656e6f75676820636f6c6c61746572616c20617661696c61626c652060008301527f696e20526f636b657420506f6f6c0000000000000000000000000000000000006020830152604082019050919050565b6000620027e4603c8362002d73565b91507f526f636b657420506f6f6c2077696c6c206e6f74206c657420796f75206d6f7660008301527f65206f7220776974686472617720796f75722072455448207965742e000000006020830152604082019050919050565b60006200284c60278362002d73565b91507f43616e6e6f74206d69677261746520746f206e6f6e2d6578697374616e74206360008301527f6f6e7472616374000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620028b460148362002d73565b91507f4e6f7468696e67207374616b656420686572652e0000000000000000000000006000830152602082019050919050565b6000620028f660328362002d73565b91507f596f752063616e6e6f74207769746864726177206d6f7265204554482074686160008301527f6e20796f752068617665207374616b65642e00000000000000000000000000006020830152604082019050919050565b60006200295e601b8362002d73565b91507f596f7520617265206e6f74207374616b696e6720616e792045544800000000006000830152602082019050919050565b6000620029a060108362002d84565b91507f636f6e74726163742e61646472657373000000000000000000000000000000006000830152601082019050919050565b6000620029e260218362002d73565b91507f596f75206d757374207769746864726177206d6f7265207468616e203020455460008301527f48000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600062002a4a601d8362002d73565b91507f596f752063616e6e6f74206d6967726174652074686174206d7563682e0000006000830152602082019050919050565b62002a888162002e71565b82525050565b600062002a9c828462002666565b60208201915062002aad82620026e9565b915081905092915050565b600062002ac58262002991565b915062002ad2826200272b565b9150819050919050565b600060208201905062002af3600083018462002633565b92915050565b600060408201905062002b10600083018562002633565b62002b1f602083018462002633565b9392505050565b600060408201905062002b3d600083018562002633565b62002b4c602083018462002a7d565b9392505050565b600060208201905062002b6a600083018462002644565b92915050565b600060208201905062002b87600083018462002655565b92915050565b6000602082019050818103600083015262002ba88162002681565b9050919050565b6000602082019050818103600083015262002bca816200276d565b9050919050565b6000602082019050818103600083015262002bec81620027d5565b9050919050565b6000602082019050818103600083015262002c0e816200283d565b9050919050565b6000602082019050818103600083015262002c3081620028a5565b9050919050565b6000602082019050818103600083015262002c5281620028e7565b9050919050565b6000602082019050818103600083015262002c74816200294f565b9050919050565b6000602082019050818103600083015262002c9681620029d3565b9050919050565b6000602082019050818103600083015262002cb88162002a3b565b9050919050565b600060208201905062002cd6600083018462002a7d565b92915050565b600060408201905062002cf3600083018562002a7d565b62002d02602083018462002633565b9392505050565b600060408201905062002d20600083018562002a7d565b62002d2f602083018462002a7d565b9392505050565b600060608201905062002d4d600083018662002a7d565b62002d5c602083018562002a7d565b62002d6b604083018462002a7d565b949350505050565b600082825260208201905092915050565b600081905092915050565b600062002d9c8262002e71565b915062002da98362002e71565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562002de15762002de062002e85565b5b828201905092915050565b600062002df98262002e71565b915062002e068362002e71565b92508282101562002e1c5762002e1b62002e85565b5b828203905092915050565b600062002e348262002e51565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b62002ebf8162002e27565b811462002ecb57600080fd5b50565b62002ed98162002e3b565b811462002ee557600080fd5b50565b62002ef38162002e71565b811462002eff57600080fd5b5056fe608060405234801561001057600080fd5b50604051610e52380380610e52833981810160405281019061003291906100cf565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610154565b6000815190506100c98161013d565b92915050565b600080604083850312156100e257600080fd5b60006100f0858286016100ba565b9250506020610101858286016100ba565b9150509250929050565b60006101168261011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101468161010b565b811461015157600080fd5b50565b610cef806101636000396000f3fe6080604052600436106100345760003560e01c80632a3d7c811461003957806342966c6814610064578063d0e30db0146100a1575b600080fd5b34801561004557600080fd5b5061004e6100bf565b60405161005b9190610b7a565b60405180910390f35b34801561007057600080fd5b5061008b600480360381019061008691906108e8565b61022c565b6040516100989190610b7a565b60405180910390f35b6100a96104b2565b6040516100b69190610b7a565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610151576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014890610b5a565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663bd02d0f5306040516020016101a49190610abe565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016101d69190610b3f565b60206040518083038186803b1580156101ee57600080fd5b505afa158015610202573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102269190610911565b91505090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b590610b5a565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a72160405160200161031190610ae4565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016103439190610b3f565b60206040518083038186803b15801561035b57600080fd5b505afa15801561036f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039391906108bf565b905060004790508173ffffffffffffffffffffffffffffffffffffffff166342966c68866040518263ffffffff1660e01b81526004016103d39190610b7a565b602060405180830381600087803b1580156103ed57600080fd5b505af1158015610401573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104259190610911565b50600061043b824761086a90919063ffffffff16565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156104a5573d6000803e3d6000fd5b5080945050505050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053b90610b5a565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a72160405160200161059790610b04565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016105c99190610b3f565b60206040518083038186803b1580156105e157600080fd5b505afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061991906108bf565b905060008273ffffffffffffffffffffffffffffffffffffffff166321f8a72160405160200161064890610ae4565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161067a9190610b3f565b60206040518083038186803b15801561069257600080fd5b505afa1580156106a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ca91906108bf565b905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107079190610b24565b60206040518083038186803b15801561071f57600080fd5b505afa158015610733573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107579190610911565b90508273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156107a157600080fd5b505af11580156107b5573d6000803e3d6000fd5b505050505060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107f59190610b24565b60206040518083038186803b15801561080d57600080fd5b505afa158015610821573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108459190610911565b9050600061085c838361086a90919063ffffffff16565b905080965050505050505090565b600081836108789190610bb1565b905092915050565b60008151905061088f81610c8b565b92915050565b6000813590506108a481610ca2565b92915050565b6000815190506108b981610ca2565b92915050565b6000602082840312156108d157600080fd5b60006108df84828501610880565b91505092915050565b6000602082840312156108fa57600080fd5b600061090884828501610895565b91505092915050565b60006020828403121561092357600080fd5b6000610931848285016108aa565b91505092915050565b61094381610be5565b82525050565b61095a61095582610be5565b610c2b565b82525050565b61096981610bf7565b82525050565b600061097c601283610ba6565b91507f757365722e6465706f7369742e626c6f636b00000000000000000000000000006000830152601282019050919050565b60006109bc600f83610ba6565b91507f726f636b6574546f6b656e5245544800000000000000000000000000000000006000830152600f82019050919050565b60006109fc601083610ba6565b91507f636f6e74726163742e61646472657373000000000000000000000000000000006000830152601082019050919050565b6000610a3c601c83610b95565b91507f4f6e6c7920526f636b65745374616b652063616e20646f2074686174000000006000830152602082019050919050565b6000610a7c601183610ba6565b91507f726f636b65744465706f736974506f6f6c0000000000000000000000000000006000830152601182019050919050565b610ab881610c21565b82525050565b6000610ac98261096f565b9150610ad58284610949565b60148201915081905092915050565b6000610aef826109ef565b9150610afa826109af565b9150819050919050565b6000610b0f826109ef565b9150610b1a82610a6f565b9150819050919050565b6000602082019050610b39600083018461093a565b92915050565b6000602082019050610b546000830184610960565b92915050565b60006020820190508181036000830152610b7381610a2f565b9050919050565b6000602082019050610b8f6000830184610aaf565b92915050565b600082825260208201905092915050565b600081905092915050565b6000610bbc82610c21565b9150610bc783610c21565b925082821015610bda57610bd9610c4f565b5b828203905092915050565b6000610bf082610c01565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c3682610c3d565b9050919050565b6000610c4882610c7e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160601b9050919050565b610c9481610be5565b8114610c9f57600080fd5b50565b610cab81610c21565b8114610cb657600080fd5b5056fea26469706673582212208e3a318debbbeec76770ca73af8e3ff8b52e4ff879bc0e57f35914758a6998f664736f6c63430008000033a2646970667358221220f4191d3b2b71f444c9688c814bd28e87ac9ef70995867a3f485aecc64064bdcc64736f6c63430008000033",
  "deployedBytecode": "0x608060405260043610620000f75760003560e01c806395919404116200008b578063bc7f2f401162000061578063bc7f2f4014620002f6578063c4893c51146200033c578063df58358f1462000380578063dff1735714620003b057620000ff565b8063959194041462000240578063ab4428281462000284578063ad68ebf714620002c857620000ff565b80632e1a7d4d11620000cd5780632e1a7d4d14620001925780633a4b66f114620001c057806375cd51ed14620001cc57806375d9ad1b146200021057620000ff565b806310cbe69214620001045780631aa3a00814620001485780632accfc04146200016257620000ff565b36620000ff57005b600080fd5b3480156200011157600080fd5b506200013060048036038101906200012a919062002516565b620003e0565b6040516200013f919062002cbf565b60405180910390f35b3480156200015557600080fd5b50620001606200042b565b005b3480156200016f57600080fd5b506200017a62000602565b60405162000189919062002cbf565b60405180910390f35b3480156200019f57600080fd5b50620001be6004803603810190620001b89190620025db565b62000807565b005b620001ca62000f88565b005b348015620001d957600080fd5b50620001f86004803603810190620001f2919062002516565b620013c0565b60405162000207919062002b53565b60405180910390f35b3480156200021d57600080fd5b506200022862001418565b60405162000237919062002b70565b60405180910390f35b3480156200024d57600080fd5b506200026c600480360381019062000266919062002516565b6200143c565b6040516200027b919062002adc565b60405180910390f35b3480156200029157600080fd5b50620002b06004803603810190620002aa919062002516565b6200150b565b604051620002bf919062002cbf565b60405180910390f35b348015620002d557600080fd5b50620002f46004803603810190620002ee91906200256e565b620016c5565b005b3480156200030357600080fd5b506200032260048036038101906200031c919062002516565b62001cb9565b604051620003339392919062002d36565b60405180910390f35b3480156200034957600080fd5b5062000368600480360381019062000362919062002516565b62001f17565b60405162000377919062002b53565b60405180910390f35b3480156200038d57600080fd5b506200039862002184565b604051620003a7919062002cbf565b60405180910390f35b348015620003bd57600080fd5b50620003c8620022ee565b604051620003d7919062002cbf565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16151514620006005760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630604051620005129062002495565b6200051f92919062002af9565b604051809103906000f0801580156200053c573d6000803e3d6000fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167feeda149c76076b34d4b9d8896c2f7efc0d33d1c7b53ea3c5db490d64613f603a60405160405180910390a25b565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a721604051602001620006599062002ab8565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016200068d919062002b70565b60206040518083038186803b158015620006a657600080fd5b505afa158015620006bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006e1919062002542565b90508073ffffffffffffffffffffffffffffffffffffffff16638b32fa238273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016200073a919062002adc565b60206040518083038186803b1580156200075357600080fd5b505afa15801562000768573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200078e919062002607565b6040518263ffffffff1660e01b8152600401620007ac919062002cbf565b60206040518083038186803b158015620007c557600080fd5b505afa158015620007da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000800919062002607565b9250505090565b600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff161515146200089f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008969062002c15565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541162000926576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200091d9062002c15565b60405180910390fd5b600081116200096c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009639062002c7b565b60405180910390fd5b600115156200097b3362001f17565b151514620009c0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009b79062002bd1565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a72160405160200162000a169062002ab8565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040162000a4a919062002b70565b60206040518083038186803b15801562000a6357600080fd5b505afa15801562000a78573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a9e919062002542565b9050828173ffffffffffffffffffffffffffffffffffffffff1663d6eb59106040518163ffffffff1660e01b815260040160206040518083038186803b15801562000ae857600080fd5b505afa15801562000afd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b23919062002607565b101562000b67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000b5e9062002baf565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff16638b32fa236000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518263ffffffff1660e01b815260040162000be5919062002cbf565b60206040518083038186803b15801562000bfe57600080fd5b505afa15801562000c13573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c39919062002607565b90508084111562000c81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000c789062002c37565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16634346f03e866040518263ffffffff1660e01b815260040162000cbe919062002cbf565b60206040518083038186803b15801562000cd757600080fd5b505afa15801562000cec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d12919062002607565b905060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68836040518263ffffffff1660e01b815260040162000db2919062002cbf565b602060405180830381600087803b15801562000dcd57600080fd5b505af115801562000de2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e08919062002607565b905062000e60826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546200246590919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801562000eec573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f9f167690f6f00e8e808e35862cdeaf34a0841f5fbdfcd2847e5efe7ea97d94d8826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460405162000f7892919062002d09565b60405180910390a2505050505050565b6000341162000fce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000fc59062002b8d565b60405180910390fd5b600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16151514620011a35760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630604051620010b59062002495565b620010c292919062002af9565b604051809103906000f080158015620010df573d6000803e3d6000fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167feeda149c76076b34d4b9d8896c2f7efc0d33d1c7b53ea3c5db490d64613f603a60405160405180910390a25b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016020604051808303818588803b1580156200124f57600080fd5b505af115801562001264573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200128b919062002607565b9050620012e3816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546200247d90919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167f3877d5db8b1acb5d5192548366adcabea5b036233d0be9fc10723a5188d900ec82346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051620013b59392919062002d36565b60405180910390a250565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff169050919050565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd981565b6000600115156000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16151514620014a157600062001504565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b9050919050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a721604051602001620015629062002ab8565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040162001596919062002b70565b60206040518083038186803b158015620015af57600080fd5b505afa158015620015c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015ea919062002542565b90508073ffffffffffffffffffffffffffffffffffffffff16638b32fa236000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518263ffffffff1660e01b815260040162001668919062002cbf565b60206040518083038186803b1580156200168157600080fd5b505afa15801562001696573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016bc919062002607565b92505050919050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154116200174c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620017439062002c59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620017bf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620017b69062002bf3565b60405180910390fd5b60011515620017ce3362001f17565b15151462001813576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200180a9062002bd1565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a721604051602001620018699062002ab8565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016200189d919062002b70565b60206040518083038186803b158015620018b657600080fd5b505afa158015620018cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018f1919062002542565b905060008173ffffffffffffffffffffffffffffffffffffffff16638b32fa236000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518263ffffffff1660e01b815260040162001971919062002cbf565b60206040518083038186803b1580156200198a57600080fd5b505afa1580156200199f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019c5919062002607565b90508084111562001a0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162001a049062002c9d565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16634346f03e866040518263ffffffff1660e01b815260040162001a4a919062002cbf565b60206040518083038186803b15801562001a6357600080fd5b505afa15801562001a78573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a9e919062002607565b905062001af6816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546200246590919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055508573ffffffffffffffffffffffffffffffffffffffff166345ca631f82336040518363ffffffff1660e01b815260040162001b7892919062002cdc565b600060405180830381600087803b15801562001b9357600080fd5b505af115801562001ba8573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87836040518363ffffffff1660e01b815260040162001be992919062002b26565b602060405180830381600087803b15801562001c0457600080fd5b505af115801562001c19573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c3f9190620025af565b508573ffffffffffffffffffffffffffffffffffffffff1663b01f0a6b82336040518363ffffffff1660e01b815260040162001c7d92919062002cdc565b600060405180830381600087803b15801562001c9857600080fd5b505af115801562001cad573d6000803e3d6000fd5b50505050505050505050565b600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663bd02d0f57f7cb36cfba78818e097a3d983f102f9107317663854a5d185ea320a1e1a7da21560405160200162001d35919062002a8e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040162001d69919062002b70565b60206040518083038186803b15801562001d8257600080fd5b505afa15801562001d97573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001dbd919062002607565b9050600115156000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615151462001e2257600062001f06565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a3d7c816040518163ffffffff1660e01b815260040160206040518083038186803b15801562001eca57600080fd5b505afa15801562001edf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f05919062002607565b5b438294509450945050509193909250565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663bd02d0f57f7cb36cfba78818e097a3d983f102f9107317663854a5d185ea320a1e1a7da21560405160200162001f90919062002a8e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040162001fc4919062002b70565b60206040518083038186803b15801562001fdd57600080fd5b505afa15801562001ff2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002018919062002607565b9050600115156000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615151462002081576001925050506200217f565b80620021796000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a3d7c816040518163ffffffff1660e01b815260040160206040518083038186803b1580156200212e57600080fd5b505afa15801562002143573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002169919062002607565b426200246590919063ffffffff16565b11925050505b919050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a721604051602001620021db9062002ab8565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016200220f919062002b70565b60206040518083038186803b1580156200222857600080fd5b505afa1580156200223d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002263919062002542565b90508073ffffffffffffffffffffffffffffffffffffffff1663d6eb59106040518163ffffffff1660e01b815260040160206040518083038186803b158015620022ac57600080fd5b505afa158015620022c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022e7919062002607565b9250505090565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a721604051602001620023459062002ab8565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040162002379919062002b70565b60206040518083038186803b1580156200239257600080fd5b505afa158015620023a7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023cd919062002542565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016200240a919062002adc565b60206040518083038186803b1580156200242357600080fd5b505afa15801562002438573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200245e919062002607565b9250505090565b6000818362002475919062002dec565b905092915050565b600081836200248d919062002d8f565b905092915050565b610e528062002f0383390190565b600081359050620024b48162002eb4565b92915050565b600081519050620024cb8162002eb4565b92915050565b600081519050620024e28162002ece565b92915050565b600081359050620024f98162002ee8565b92915050565b600081519050620025108162002ee8565b92915050565b6000602082840312156200252957600080fd5b60006200253984828501620024a3565b91505092915050565b6000602082840312156200255557600080fd5b60006200256584828501620024ba565b91505092915050565b600080604083850312156200258257600080fd5b60006200259285828601620024a3565b9250506020620025a585828601620024e8565b9150509250929050565b600060208284031215620025c257600080fd5b6000620025d284828501620024d1565b91505092915050565b600060208284031215620025ee57600080fd5b6000620025fe84828501620024e8565b91505092915050565b6000602082840312156200261a57600080fd5b60006200262a84828501620024ff565b91505092915050565b6200263e8162002e27565b82525050565b6200264f8162002e3b565b82525050565b620026608162002e47565b82525050565b6200267b620026758262002e47565b62002e7b565b82525050565b60006200269060308362002d73565b91507f596f75206d7573742073656e642061206e6f6e2d7a65726f20616d6f756e742060008301527f6f662065746820746f207374616b652e000000000000000000000000000000006020830152604082019050919050565b6000620026f8601a8362002d84565b91507f6e6574776f726b2e726574682e6465706f7369742e64656c61790000000000006000830152601a82019050919050565b60006200273a600f8362002d84565b91507f726f636b6574546f6b656e5245544800000000000000000000000000000000006000830152600f82019050919050565b60006200277c602e8362002d73565b91507f4e6f7420656e6f75676820636f6c6c61746572616c20617661696c61626c652060008301527f696e20526f636b657420506f6f6c0000000000000000000000000000000000006020830152604082019050919050565b6000620027e4603c8362002d73565b91507f526f636b657420506f6f6c2077696c6c206e6f74206c657420796f75206d6f7660008301527f65206f7220776974686472617720796f75722072455448207965742e000000006020830152604082019050919050565b60006200284c60278362002d73565b91507f43616e6e6f74206d69677261746520746f206e6f6e2d6578697374616e74206360008301527f6f6e7472616374000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620028b460148362002d73565b91507f4e6f7468696e67207374616b656420686572652e0000000000000000000000006000830152602082019050919050565b6000620028f660328362002d73565b91507f596f752063616e6e6f74207769746864726177206d6f7265204554482074686160008301527f6e20796f752068617665207374616b65642e00000000000000000000000000006020830152604082019050919050565b60006200295e601b8362002d73565b91507f596f7520617265206e6f74207374616b696e6720616e792045544800000000006000830152602082019050919050565b6000620029a060108362002d84565b91507f636f6e74726163742e61646472657373000000000000000000000000000000006000830152601082019050919050565b6000620029e260218362002d73565b91507f596f75206d757374207769746864726177206d6f7265207468616e203020455460008301527f48000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600062002a4a601d8362002d73565b91507f596f752063616e6e6f74206d6967726174652074686174206d7563682e0000006000830152602082019050919050565b62002a888162002e71565b82525050565b600062002a9c828462002666565b60208201915062002aad82620026e9565b915081905092915050565b600062002ac58262002991565b915062002ad2826200272b565b9150819050919050565b600060208201905062002af3600083018462002633565b92915050565b600060408201905062002b10600083018562002633565b62002b1f602083018462002633565b9392505050565b600060408201905062002b3d600083018562002633565b62002b4c602083018462002a7d565b9392505050565b600060208201905062002b6a600083018462002644565b92915050565b600060208201905062002b87600083018462002655565b92915050565b6000602082019050818103600083015262002ba88162002681565b9050919050565b6000602082019050818103600083015262002bca816200276d565b9050919050565b6000602082019050818103600083015262002bec81620027d5565b9050919050565b6000602082019050818103600083015262002c0e816200283d565b9050919050565b6000602082019050818103600083015262002c3081620028a5565b9050919050565b6000602082019050818103600083015262002c5281620028e7565b9050919050565b6000602082019050818103600083015262002c74816200294f565b9050919050565b6000602082019050818103600083015262002c9681620029d3565b9050919050565b6000602082019050818103600083015262002cb88162002a3b565b9050919050565b600060208201905062002cd6600083018462002a7d565b92915050565b600060408201905062002cf3600083018562002a7d565b62002d02602083018462002633565b9392505050565b600060408201905062002d20600083018562002a7d565b62002d2f602083018462002a7d565b9392505050565b600060608201905062002d4d600083018662002a7d565b62002d5c602083018562002a7d565b62002d6b604083018462002a7d565b949350505050565b600082825260208201905092915050565b600081905092915050565b600062002d9c8262002e71565b915062002da98362002e71565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562002de15762002de062002e85565b5b828201905092915050565b600062002df98262002e71565b915062002e068362002e71565b92508282101562002e1c5762002e1b62002e85565b5b828203905092915050565b600062002e348262002e51565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b62002ebf8162002e27565b811462002ecb57600080fd5b50565b62002ed98162002e3b565b811462002ee557600080fd5b50565b62002ef38162002e71565b811462002eff57600080fd5b5056fe608060405234801561001057600080fd5b50604051610e52380380610e52833981810160405281019061003291906100cf565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610154565b6000815190506100c98161013d565b92915050565b600080604083850312156100e257600080fd5b60006100f0858286016100ba565b9250506020610101858286016100ba565b9150509250929050565b60006101168261011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101468161010b565b811461015157600080fd5b50565b610cef806101636000396000f3fe6080604052600436106100345760003560e01c80632a3d7c811461003957806342966c6814610064578063d0e30db0146100a1575b600080fd5b34801561004557600080fd5b5061004e6100bf565b60405161005b9190610b7a565b60405180910390f35b34801561007057600080fd5b5061008b600480360381019061008691906108e8565b61022c565b6040516100989190610b7a565b60405180910390f35b6100a96104b2565b6040516100b69190610b7a565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610151576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014890610b5a565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663bd02d0f5306040516020016101a49190610abe565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016101d69190610b3f565b60206040518083038186803b1580156101ee57600080fd5b505afa158015610202573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102269190610911565b91505090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b590610b5a565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a72160405160200161031190610ae4565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016103439190610b3f565b60206040518083038186803b15801561035b57600080fd5b505afa15801561036f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039391906108bf565b905060004790508173ffffffffffffffffffffffffffffffffffffffff166342966c68866040518263ffffffff1660e01b81526004016103d39190610b7a565b602060405180830381600087803b1580156103ed57600080fd5b505af1158015610401573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104259190610911565b50600061043b824761086a90919063ffffffff16565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156104a5573d6000803e3d6000fd5b5080945050505050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053b90610b5a565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166321f8a72160405160200161059790610b04565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016105c99190610b3f565b60206040518083038186803b1580156105e157600080fd5b505afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061991906108bf565b905060008273ffffffffffffffffffffffffffffffffffffffff166321f8a72160405160200161064890610ae4565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161067a9190610b3f565b60206040518083038186803b15801561069257600080fd5b505afa1580156106a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ca91906108bf565b905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107079190610b24565b60206040518083038186803b15801561071f57600080fd5b505afa158015610733573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107579190610911565b90508273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156107a157600080fd5b505af11580156107b5573d6000803e3d6000fd5b505050505060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107f59190610b24565b60206040518083038186803b15801561080d57600080fd5b505afa158015610821573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108459190610911565b9050600061085c838361086a90919063ffffffff16565b905080965050505050505090565b600081836108789190610bb1565b905092915050565b60008151905061088f81610c8b565b92915050565b6000813590506108a481610ca2565b92915050565b6000815190506108b981610ca2565b92915050565b6000602082840312156108d157600080fd5b60006108df84828501610880565b91505092915050565b6000602082840312156108fa57600080fd5b600061090884828501610895565b91505092915050565b60006020828403121561092357600080fd5b6000610931848285016108aa565b91505092915050565b61094381610be5565b82525050565b61095a61095582610be5565b610c2b565b82525050565b61096981610bf7565b82525050565b600061097c601283610ba6565b91507f757365722e6465706f7369742e626c6f636b00000000000000000000000000006000830152601282019050919050565b60006109bc600f83610ba6565b91507f726f636b6574546f6b656e5245544800000000000000000000000000000000006000830152600f82019050919050565b60006109fc601083610ba6565b91507f636f6e74726163742e61646472657373000000000000000000000000000000006000830152601082019050919050565b6000610a3c601c83610b95565b91507f4f6e6c7920526f636b65745374616b652063616e20646f2074686174000000006000830152602082019050919050565b6000610a7c601183610ba6565b91507f726f636b65744465706f736974506f6f6c0000000000000000000000000000006000830152601182019050919050565b610ab881610c21565b82525050565b6000610ac98261096f565b9150610ad58284610949565b60148201915081905092915050565b6000610aef826109ef565b9150610afa826109af565b9150819050919050565b6000610b0f826109ef565b9150610b1a82610a6f565b9150819050919050565b6000602082019050610b39600083018461093a565b92915050565b6000602082019050610b546000830184610960565b92915050565b60006020820190508181036000830152610b7381610a2f565b9050919050565b6000602082019050610b8f6000830184610aaf565b92915050565b600082825260208201905092915050565b600081905092915050565b6000610bbc82610c21565b9150610bc783610c21565b925082821015610bda57610bd9610c4f565b5b828203905092915050565b6000610bf082610c01565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c3682610c3d565b9050919050565b6000610c4882610c7e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160601b9050919050565b610c9481610be5565b8114610c9f57600080fd5b50565b610cab81610c21565b8114610cb657600080fd5b5056fea26469706673582212208e3a318debbbeec76770ca73af8e3ff8b52e4ff879bc0e57f35914758a6998f664736f6c63430008000033a2646970667358221220f4191d3b2b71f444c9688c814bd28e87ac9ef70995867a3f485aecc64064bdcc64736f6c63430008000033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1232,
        "contract": "contracts/RocketStake.sol:RocketStake",
        "label": "stakers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(Staker)1227_storage)"
      },
      {
        "astId": 1234,
        "contract": "contracts/RocketStake.sol:RocketStake",
        "label": "rocket_storage_address",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(RETHBuyer)1214": {
        "encoding": "inplace",
        "label": "contract RETHBuyer",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Staker)1227_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct RocketStake.Staker)",
        "numberOfBytes": "32",
        "value": "t_struct(Staker)1227_storage"
      },
      "t_struct(Staker)1227_storage": {
        "encoding": "inplace",
        "label": "struct RocketStake.Staker",
        "members": [
          {
            "astId": 1222,
            "contract": "contracts/RocketStake.sol:RocketStake",
            "label": "reth_buyer",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(RETHBuyer)1214"
          },
          {
            "astId": 1224,
            "contract": "contracts/RocketStake.sol:RocketStake",
            "label": "staked_reth",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1226,
            "contract": "contracts/RocketStake.sol:RocketStake",
            "label": "exists",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}